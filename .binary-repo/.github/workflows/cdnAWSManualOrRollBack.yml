name: Deploy CDN (manual/rollback)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'DEV'
        type: choice
        options:
          - DEV
          - TEST
          - STAGING
          - BETA
          - PROD
      updateLatest:
        description: 'Update the 1.x.x_latest folders (true/false), if not set will be true if is a version'
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      purgeVersion:
        description: 'Optional Version to delete'
        required: false
        type: text
      purgeOnly:
        description: 'Don\t deploy after purge'
        type: boolean
        default: false
      dryRun:
        description: 'Dry Run deployment (set to false to deploy)'
        required: true
        type: boolean
        default: true

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment }} Environment
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}
      url: ${{ steps.version.outputs.url }}
    concurrency:
      group: ${{ github.event.inputs.environment }}-deployments
      cancel-in-progress: false

    permissions:
      id-token: write #Needed for AWS role switch
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'

      - name: Get Git Tag or Package.json Version
        id: version
        run: bash -x ./.github/workflows/getVersionDetails.sh "dev-static"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ap-southeast-2

      - name: Save root directory
        run: echo "REPO_ROOT=$(pwd)" >> $GITHUB_ENV

      - name: Deploy
        run: |
          bash -x ./.github/workflows/cdnDeploy.sh repo_root=${{ env.REPO_ROOT }} s3bucket="${{ secrets.S3BUCKET }}" \
            version=${{ env.version }} updateLatest=${{ github.event.inputs.updateLatest }} purgeVersion=${{ github.event.inputs.purgeVersion }} \
            dry_run=${{  github.event.inputs.dryRun }}

